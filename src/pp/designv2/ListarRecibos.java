/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pp.designv2;

import javax.swing.table.AbstractTableModel;
import pp.negocio.*;
import java.util.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Utilizador
 */
public class ListarRecibos extends javax.swing.JFrame {
    private Sistema sistema;
    private AbstractTableModel modeloTabela;
    private ArrayList<Recibo> listaRec;
    /**
     * Creates new form ListarRecibos
     */
    public ListarRecibos(Sistema sistema) {
        initComponents();
        setSize(778, 489);
        this.sistema = sistema;
        this.modeloTabela = criarModeloTabela();
        docTable.setModel(modeloTabela);
        this.setResizable(false);
         
         
        
    }
    
    private AbstractTableModel criarModeloTabela() {   
        String[] nomeColunas = {"Nº Documento", "Nome", "Data de Emissão", "Data Limite", "Data de Pagamento", "Multa"};
        
        return new AbstractTableModel() {     
            @Override
            public String getColumnName(int column) {
                return nomeColunas[column];
            }
           
            @Override
            public int getRowCount() {
                //Retorna o número de linhas que a tabela deverá ter
                return sistema.getListaFacturas().size();
            }

            @Override
            public int getColumnCount() {
                //Retorna o número de colunas que a tabela deverá ter
                return nomeColunas.length;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
            /*
                Este método é invocado quando se pretende "popular" cada uma das células da tabela
                Se a tabela tem 3 linhas e 2 colunas existem 6 células (3*2), logo o método será invocado 6 vezes
                    rowIndex representa a linha da célula (0 a rowCount -1)
                    columnIndex representa a coluna da célula (0 a ColumnCount -1)
            */
                switch (columnIndex) {
                    case 0: 
                        return sistema.getListaFacturas().get(rowIndex).getNdocumento();
                    case 1:
                        return sistema.getListaFacturas().get(rowIndex).getCliente().getNome();
                    case 2:
                        return sistema.getListaFacturas().get(rowIndex).getDataemissao();
                    case 3:
                        return sistema.getListaFacturas().get(rowIndex).getDatalimite();
                    case 4:
                        return sistema.getListaFacturas().get(rowIndex).getDatapagamento();
                    case 5:
                        return sistema.getListaFacturas().get(rowIndex).getMulta();
                    default:
                        return "";
                }                              
            }            
        };
    }
    
    public void atualizar() {    
        //Informa o modelo que foram efetuadas alteracoes, o modelo informa a tabela e os dados são redesenhados
        modeloTabela.fireTableDataChanged();
    }
    /*
    public ArrayList<Recibo> listaFacturas(Sistema sistema){
         ArrayList<Fracao> allFrac = new ArrayList<>(this.sistema.tenta());
         ArrayList<Recibo> allRecibos = new ArrayList<>();
         for(int i = 0; i < allFrac.size(); i++){
             ArrayList<Recibo> allFracoes = allFrac.get(i).listaRecibos();
             for(int p = 0; p < allFracoes.size(); p++){
                 Recibo recibo = allFracoes.get(i);
                 allRecibos.add(recibo);
                 
                 }
             }
         
         return allRecibos;
    }
    */
    
    public void pagar(){
        int rowIndex = docTable.getSelectedRow();
        if (rowIndex == -1) return;
        
        int ndocumento = (int) modeloTabela.getValueAt(rowIndex, 0);
        Recibo ref = sistema.getListaFacturas().get(ndocumento - 1);
        ref.setPago(true);
        atualizar();
    }
    
    public void segundaVia(){
        int rowIndex = docTable.getSelectedRow();
        if (rowIndex == -1) return;
        
        int ndocumento = (int) modeloTabela.getValueAt(rowIndex, 0);
        Recibo ref = sistema.getListaFacturas().get(ndocumento - 1);
        ref.updateNVia();
        atualizar();
        JOptionPane.showMessageDialog(this, "Foi imprimida uma segunda via do Documento!");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        docTable = new javax.swing.JTable();
        pagarBtn = new javax.swing.JButton();
        reprintBtn = new javax.swing.JButton();
        factmensal = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        docTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(docTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(47, 54, 680, 170);

        pagarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/money_euro.png"))); // NOI18N
        pagarBtn.setText("Efectuar Pagamento");
        pagarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarBtnActionPerformed(evt);
            }
        });
        getContentPane().add(pagarBtn);
        pagarBtn.setBounds(47, 280, 180, 40);

        reprintBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/page_white_edit.png"))); // NOI18N
        reprintBtn.setText("Emitir 2ª Via");
        reprintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reprintBtnActionPerformed(evt);
            }
        });
        getContentPane().add(reprintBtn);
        reprintBtn.setBounds(312, 280, 150, 40);

        factmensal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/emitir fatura.png"))); // NOI18N
        factmensal.setText("Emitir Facturação Mensal");
        factmensal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factmensalActionPerformed(evt);
            }
        });
        getContentPane().add(factmensal);
        factmensal.setBounds(520, 280, 210, 40);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/cancel.png"))); // NOI18N
        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(570, 400, 160, 37);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/nossa empresa.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 780, 490);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pagarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarBtnActionPerformed
        pagar();        // TODO add your handling code here:
    }//GEN-LAST:event_pagarBtnActionPerformed

    private void reprintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reprintBtnActionPerformed
        segundaVia();
                // TODO add your handling code here:
    }//GEN-LAST:event_reprintBtnActionPerformed

    private void factmensalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factmensalActionPerformed
        sistema.emitirFacturacaoMensal();
        atualizar();        // TODO add your handling code here:
    }//GEN-LAST:event_factmensalActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable docTable;
    private javax.swing.JButton factmensal;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pagarBtn;
    private javax.swing.JButton reprintBtn;
    // End of variables declaration//GEN-END:variables
}
