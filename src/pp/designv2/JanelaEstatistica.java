/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pp.designv2;

import java.util.*;
import java.time.*;
import javax.swing.JOptionPane;
import pp.negocio.*;
import javax.swing.table.AbstractTableModel;
/**
 *
 * @author Utilizador
 */
public class JanelaEstatistica extends javax.swing.JFrame {
    private Sistema sistema;
    private AbstractTableModel modeloTabela;
    //private String zona;
    
    /**
     * Creates new form JanelaEstatistica
     */
    public JanelaEstatistica(Sistema sistema) {
        initComponents();
        setSize(1032, 661);
        this.sistema = sistema;
        this.modeloTabela = criarModeloTabela();
        bestCondo.setModel(modeloTabela);
       // this.zona = sistema.statCod();
       jTextField1.setText(sistema.statCod());
       this.setResizable(false);
        
    }
    
    private AbstractTableModel criarModeloTabela() {   
        String[] nomeColunas = {"Nº Condominio", "Responsavel", "Montante Facturado", "Morada"};
        
        return new AbstractTableModel() {     
            @Override
            public String getColumnName(int column) {
                return nomeColunas[column];
            }
           
            @Override
            public int getRowCount() {
                //Retorna o número de linhas que a tabela deverá ter
                return sistema.orderbyFact().size();
            }

            @Override
            public int getColumnCount() {
                //Retorna o número de colunas que a tabela deverá ter
                return nomeColunas.length;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
            /*
                Este método é invocado quando se pretende "popular" cada uma das células da tabela
                Se a tabela tem 3 linhas e 2 colunas existem 6 células (3*2), logo o método será invocado 6 vezes
                    rowIndex representa a linha da célula (0 a rowCount -1)
                    columnIndex representa a coluna da célula (0 a ColumnCount -1)
            */
                switch (columnIndex) {
                    case 0: 
                        return sistema.orderbyFact().get(rowIndex).getnCondominio();
                    case 1:
                        return sistema.orderbyFact().get(rowIndex).getResp().getNome();
                    case 2:
                        return sistema.orderbyFact().get(rowIndex).getMontanteRecibos();
                    case 3:
                        return sistema.orderbyFact().get(rowIndex).getMorada();
                    default:
                        return "";
                }                              
            }            
        };
    }
    
    public void atualizar() {    
        //Informa o modelo que foram efetuadas alteracoes, o modelo informa a tabela e os dados são redesenhados
        modeloTabela.fireTableDataChanged();
    }
    
    private void consulta(){
        Date dataIni = calendarioIni.getDate();
        Date dataLim = calendarioLimite.getDate();
        LocalDate refIni = dataIni.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate refFim = dataLim.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        if(refIni.isAfter(refFim)){
            JOptionPane.showMessageDialog(this, "A data Inicial é após a data Limite");
        }else{
        
        double total = sistema.minmax(refIni, refFim);
        JOptionPane.showMessageDialog(this, "O montante facturado entre " + refIni + " e " + refFim + " é de: "+ total);
        
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bestCondo = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        calendarioIni = new com.toedter.calendar.JCalendar();
        calendarioLimite = new com.toedter.calendar.JCalendar();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        bestCondo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(bestCondo);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(59, 72, 610, 330);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Melhores Condominios:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 28, 150, 16);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Area de maior ação:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(682, 39, 140, 16);

        jTextField1.setEditable(false);
        getContentPane().add(jTextField1);
        jTextField1.setBounds(819, 36, 80, 22);
        getContentPane().add(calendarioIni);
        calendarioIni.setBounds(770, 130, 191, 155);
        getContentPane().add(calendarioLimite);
        calendarioLimite.setBounds(770, 380, 191, 155);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Data Limite");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(770, 340, 200, 16);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Data Inicial");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(780, 90, 170, 16);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/book.png"))); // NOI18N
        jButton1.setText("Consultar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(70, 500, 130, 50);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/cancel.png"))); // NOI18N
        jButton2.setText("Saír");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(530, 500, 130, 50);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/1312323.jpg"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1040, 740);
        getContentPane().add(jPanel1);
        jPanel1.setBounds(790, 610, 170, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        consulta();     // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bestCondo;
    private com.toedter.calendar.JCalendar calendarioIni;
    private com.toedter.calendar.JCalendar calendarioLimite;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
