/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pp.designv2;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import pp.negocio.*;
/**
 *
 * @author Utilizador
 */
public class ListarClientes extends javax.swing.JFrame {
   
    private Sistema sistema;
    
    private AbstractTableModel modeloTabela;
    /**
     * Creates new form ListarClientes
     */
    public ListarClientes(Sistema sistema) {
        initComponents();
        setSize(856, 517);
        this.sistema = sistema;
        this.modeloTabela = criarModeloTabela();
        tabelaCliente.setModel(modeloTabela);
        tabelaCliente.setOpaque(false);
        this.setResizable(false);
         
         
        
    }

    public AbstractTableModel getModeloTabela() {
        return modeloTabela;
    }

    public void setModeloTabela(AbstractTableModel modeloTabela) {
        this.modeloTabela = modeloTabela;
    }
    
    
    
    private AbstractTableModel criarModeloTabela() {   
        String[] nomeColunas = {"Nome", "NIF", "Telefone", "Morada", "Mail"};
        
        return new AbstractTableModel() {     
            @Override
            public String getColumnName(int column) {
                return nomeColunas[column];
            }
           
            @Override
            public int getRowCount() {
                //Retorna o número de linhas que a tabela deverá ter
                return sistema.listaClientes().size();
            }

            @Override
            public int getColumnCount() {
                //Retorna o número de colunas que a tabela deverá ter
                return nomeColunas.length;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
            /*
                Este método é invocado quando se pretende "popular" cada uma das células da tabela
                Se a tabela tem 3 linhas e 2 colunas existem 6 células (3*2), logo o método será invocado 6 vezes
                    rowIndex representa a linha da célula (0 a rowCount -1)
                    columnIndex representa a coluna da célula (0 a ColumnCount -1)
            */
                switch (columnIndex) {
                    case 0: 
                        return sistema.listaClientes().get(rowIndex).getNome();
                    case 1:
                        return sistema.listaClientes().get(rowIndex).getNif();
                    case 2:
                        return sistema.listaClientes().get(rowIndex).getTelefone();
                    case 3:
                        return sistema.listaClientes().get(rowIndex).getMorada();
                    case 4:
                        return sistema.listaClientes().get(rowIndex).getMail();
                    default:
                        return "";
                }                              
            }            
        };
    }
    
    public void atualizar() {    
        //Informa o modelo que foram efetuadas alteracoes, o modelo informa a tabela e os dados são redesenhados
        modeloTabela.fireTableDataChanged();
    }    
    
    private void adicionar() {
        JanelaAdicionarCliente janela = new JanelaAdicionarCliente(sistema, null, this);   
        janela.setVisible(true);
    }
    
    private void editar() {
        int rowIndex = tabelaCliente.getSelectedRow();
        //Se nenhum registo selecionado, nao é possivel editar
        if (rowIndex == -1)  { JOptionPane.showMessageDialog(this, "Nenhum cliente selecionado!"); return;}
        
        int nif = (int) modeloTabela.getValueAt(rowIndex, 1);
        
        Proprietario cliente = sistema.getListaProp().get(String.valueOf(nif));
        JanelaAdicionarCliente janela = new JanelaAdicionarCliente(sistema, cliente, this);
        janela.setVisible(true);
        
    }
    
    private void remover(){
        int rowIndex = tabelaCliente.getSelectedRow();
        if (rowIndex == -1) { JOptionPane.showMessageDialog(this, "Nenhum cliente selecionado!"); return;}
        int nif = (int) modeloTabela.getValueAt(rowIndex, 1);
        sistema.getListaProp().remove(String.valueOf(nif));
        modeloTabela.fireTableDataChanged();
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();
        addCliente = new javax.swing.JButton();
        editCliente = new javax.swing.JButton();
        delBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        tabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaCliente.setToolTipText("");
        tabelaCliente.setSelectionForeground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        jScrollPane1.setViewportView(tabelaCliente);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 40, 816, 340);

        addCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/add.png"))); // NOI18N
        addCliente.setText("Adicionar");
        addCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClienteActionPerformed(evt);
            }
        });
        getContentPane().add(addCliente);
        addCliente.setBounds(20, 415, 113, 42);

        editCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/editar.png"))); // NOI18N
        editCliente.setText("Editar");
        editCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editClienteActionPerformed(evt);
            }
        });
        getContentPane().add(editCliente);
        editCliente.setBounds(253, 415, 113, 42);

        delBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/delete.png"))); // NOI18N
        delBtn.setText("Remover");
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });
        getContentPane().add(delBtn);
        delBtn.setBounds(495, 415, 113, 42);

        exitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/cancel.png"))); // NOI18N
        exitBtn.setText("Sair");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        getContentPane().add(exitBtn);
        exitBtn.setBounds(727, 416, 109, 41);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pp/designbonus/nossa empresa.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, -30, 910, 570);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClienteActionPerformed
        adicionar();        // TODO add your handling code here:
    }//GEN-LAST:event_addClienteActionPerformed

    private void editClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editClienteActionPerformed
        editar();        // TODO add your handling code here:
    }//GEN-LAST:event_editClienteActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_exitBtnActionPerformed

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        remover();
    }//GEN-LAST:event_delBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCliente;
    private javax.swing.JButton delBtn;
    private javax.swing.JButton editCliente;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaCliente;
    // End of variables declaration//GEN-END:variables

    
}
